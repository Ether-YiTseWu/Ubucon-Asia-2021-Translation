WEBVTT
Kind: captions
Language: zh-Hant

00:00:09.693 --> 00:00:15.056
今天，我想討論在筆電和樹莓派上的桌面版 Ubuntu 使用經驗

00:00:15.056 --> 00:00:16.886
並且，我也會提到如何管理它們

00:00:16.886 --> 00:00:23.209
什麼是最好的練習，以及我們該怎麼做

00:00:23.261 --> 00:00:26.845
我是Ohta，為日本樹莓派使用者社團的創辦人

00:00:27.145 --> 00:00:29.219
這是我的自我介紹

00:00:29.219 --> 00:00:32.609
我在2012年時，創辦了日本樹莓派使用者社團

00:00:32.609 --> 00:00:38.660
我正在擴大這個社團，同時我也是樹莓派基金會的志工

00:00:38.660 --> 00:00:43.310
我的主要工作領域是

00:00:43.310 --> 00:00:47.464
協助他們在日本的商業活動

00:00:48.179 --> 00:00:52.972
現在，我正在將市場擴展到日本之外

00:00:52.972 --> 00:00:56.399
譬如中國和台灣

00:00:56.399 --> 00:01:01.067
另外，這是我在官方的樹莓派論壇的另一個自我介紹

00:01:01.067 --> 00:01:05.536
這在官方論壇的“Japanese”標籤可以看到

00:01:05.536 --> 00:01:09.067
你可以從樹莓派官方網站找到相關連結

00:01:09.067 --> 00:01:16.224
只要開啟"Japanese"的類別標籤即可

00:01:16.224 --> 00:01:23.169
如果你有去查看的話，我會十分高興

00:01:23.500 --> 00:01:27.359
接著，這是今天的議程

00:01:27.359 --> 00:01:35.345
你喜歡桌面版的 Ubuntu 嗎？它是否是有用的呢？

00:01:36.345 --> 00:01:41.227
我們該在 Ubuntu 上該保留 Windows 雙系統啟動嗎？

00:01:41.227 --> 00:01:43.333
我將介紹統一可延伸韌體介面和 SD 卡

00:01:43.333 --> 00:01:47.083
還有其他的小技巧

00:01:47.083 --> 00:01:51.982
我們可以在樹莓派上使用桌面版的 Ubuntu 嗎？

00:01:51.982 --> 00:01:57.228
因此，我想介紹在樹莓派上使用 Ubuntu

00:01:57.549 --> 00:02:00.916
好，一開始

00:02:00.916 --> 00:02:02.471
你喜歡桌面版的 Ubuntu 嗎？

00:02:02.471 --> 00:02:04.872
為何我想談這個話題？

00:02:04.872 --> 00:02:12.099
這是我一個中國的朋友在臉書 Po 的照片

00:02:12.099 --> 00:02:14.816
過去，

00:02:14.816 --> 00:02:18.762
我的朋友說過“自由軟體很重要”

00:02:18.762 --> 00:02:21.297
而且他明確表示過，他沒有使用微軟的軟體的需求

00:02:21.297 --> 00:02:23.152
“開源軟體是偉大的”

00:02:23.152 --> 00:02:27.684
所以他曾說，“我們應該使用 Debian/GNU Linux”

00:02:27.684 --> 00:02:33.001
但是，現在我在跟他確認他的意見，現在卻說，“ MacOS 才是最棒的”

00:02:33.001 --> 00:02:36.623
“MacBook Pro 令人歎為觀止”

00:02:36.623 --> 00:02:38.495
從現實角度來看，我們不能避免諸如此類的評論

00:02:38.495 --> 00:02:40.345
當我們使用 Ubuntu 作為桌面

00:02:40.602 --> 00:02:43.187
我們應該考慮的問題是

00:02:43.220 --> 00:02:47.419
使用桌面版的 Ubuntu 是我們應該建造我們自己的客製化且一次性的電腦

00:02:47.419 --> 00:02:55.463
我認為我們應該評估這個觀點，

00:02:55.930 --> 00:02:58.674
當我們使用 Windows 時並沒有區別

00:02:59.736 --> 00:03:03.615
我們應該從 Vanilla 構建我們的環境，安裝操作系統，並安裝應用程序，做些設定...等

00:03:03.615 --> 00:03:07.172
並且可能需要做許多設定，這是一項耗時的任務。

00:03:07.557 --> 00:03:08.837
再加上，

00:03:09.287 --> 00:03:10.339
我相信我們應該把時間花在

00:03:10.468 --> 00:03:12.672
使用 Ubuntu 上

00:03:12.672 --> 00:03:13.678
我們可能會遇到意想不到的事情，

00:03:13.678 --> 00:03:16.871
我們應該可以接受一些權衡。

00:03:16.871 --> 00:03:26.336
從這個角度來說，我們需要耐心，就像在搭樂高積木一樣。

00:03:26.336 --> 00:03:34.297
建造和使用它是很有趣的，建立我們自己的環境是個很棒的經歷，

00:03:34.297 --> 00:03:38.905
這是我自己第一個以 GPD Pocket 2 (小筆電) 建置的環境

00:03:38.905 --> 00:03:44.938
這是 Linux 版的桌面，

00:03:44.938 --> 00:03:50.205
作業系統安裝在 SD 卡上，

00:03:50.205 --> 00:03:52.131
最近呢，我換了電腦環境

00:03:52.131 --> 00:03:56.491
這是我最新的 Ubuntu 桌面環境，

00:03:56.491 --> 00:04:03.441
這是用 GPD Pocket 2 2021 構建的，相比之前的有些微的更動

00:04:03.441 --> 00:04:10.484
而且這個直接安裝到SSD

00:04:10.484 --> 00:04:13.461
另外，

00:04:13.461 --> 00:04:19.779
GPD Pocket 有過熱的問題，尤其是背面溫度最高。

00:04:19.779 --> 00:04:29.866
因為 Core M3 消耗大量電力進而產生熱量。

00:04:30.000 --> 00:04:35.159
這張照片是我的應對方法，黏上散熱板來冷卻它。

00:04:35.963 --> 00:04:40.582
如果你能接受這一點，它會成為一個很棒的小工具。

00:04:40.582 --> 00:04:44.614
具有極強的便攜性，

00:04:44.614 --> 00:04:48.779
我可以在火車上閱讀郵件和上網，

00:04:48.779 --> 00:04:57.034
如果安裝在 SSD 中，Suspend / Resume 便足夠快了。

00:04:57.034 --> 00:05:02.974
所以我認為它非常有用。

00:05:03.054 --> 00:05:12.450
無論如何，回到我們是否應該保留 Windows 的問題。我認為我們只有一個原因，

00:05:12.950 --> 00:05:21.994
以安全和簡單的方式更新 BIOS / UEFI，我們應該使用 Windows。

00:05:21.994 --> 00:05:26.227
GPD Pocket 有 Windows 應用程序，可以更新 BIOS / UEFI。

00:05:26.227 --> 00:05:29.622
只需點擊並等待，既簡單又快速。

00:05:29.622 --> 00:05:33.593
我們還有一個辦法，BIOS/UEFI 有內置的更新介面，

00:05:33.593 --> 00:05:36.957
我們可以使用該介面更新韌體。

00:05:36.957 --> 00:05:39.583
我們還有宜的替代方案，

00:05:39.583 --> 00:05:41.984
從韌體檔案中提取，並得到二進位檔案

00:05:41.984 --> 00:05:46.217
之後，我們可以通過 BIOS / UEFI 選單進行更新。

00:05:47.885 --> 00:05:50.701
另一種方法是，使用 USB 可啟動作業系統，並從此進行系統升級。

00:05:50.701 --> 00:05:53.782
不幸的是，最安全的方法是從 Windows 更新。

00:05:53.782 --> 00:05:57.739
因此，我們可能會保留 Windows。

00:06:08.095 --> 00:06:11.167
而且，我們還有另一個使用 Windows 的原因。

00:06:15.263 --> 00:06:21.407
在實際使用場景中，我們需要 Zoom、Microsoft Office 以及一些安全軟件。

00:06:21.663 --> 00:06:27.295
BIOS 更新程序，許多聊天工具，這些在 Windows 中都很友好，但在 Linux 則不是這樣。

00:06:36.767 --> 00:06:39.827
在使用 Zoom 時，我應該考慮一些因素，例如 AI 相機功能

00:06:39.851 --> 00:06:42.911
在 Linux 上不能運作。所以我必須使用 Windows 才可以。

00:06:44.703 --> 00:06:50.847
這是 Linux 和 Windows 之間的巨大差距，在我個人的淺見，這是供應商方面的問題，

00:06:51.103 --> 00:06:55.199
他們應該在 Windows 上提供維護和 QA

00:07:05.951 --> 00:07:08.511
在這個小工具中，我不得不談論壞的方面

00:07:08.767 --> 00:07:14.911
首先，我們linux用戶無法避免SD卡的緩慢。因為我們不能使用內部 SSD 作為主儲存空間。

00:07:21.311 --> 00:07:27.455
而且，它很容易壞掉，我們每天都會看到許多壞的部分。

00:07:28.479 --> 00:07:31.807
我計劃使用 USB 記憶體，但是

00:07:32.575 --> 00:07:38.207
性能受 USB 接口限制，這是不可避免的。

00:07:39.231 --> 00:07:43.583
而且它受 USB 總容量的限制。

00:07:44.863 --> 00:07:51.007
USB 接口也用於網路線連接，它消耗頻寬並導致速度變慢。

00:07:54.079 --> 00:07:58.175
所以，當我們使用一些應用程式時，

00:07:58.431 --> 00:08:03.807
通過有限的硬碟頻寬，我們應該管理它。

00:08:05.087 --> 00:08:08.159
而且，老實說，內部硬碟真的很快。

00:08:09.951 --> 00:08:12.443
這是 benchmark 的測試結果，

00:08:12.511 --> 00:08:14.303
microSD 卡和內部磁盤的測試結果都有，

00:08:16.863 --> 00:08:19.679
它是 KDiskMark，類似 CrystalDiskMark 的測試軟體

00:08:22.751 --> 00:08:27.615
我們可以了解到隨機訪問非常慢。

00:08:31.711 --> 00:08:34.527
所以我們應該考慮如何緩解這種情況。

00:08:37.087 --> 00:08:42.463
首先，我會談談使用 microSD 的技巧，以及我使用 GPD Pocket 的經驗，

00:08:42.719 --> 00:08:48.719
我不能使用 suspend，因為 Resume 是耗時的，並且有穩定性問題。

00:08:50.143 --> 00:08:52.703
所以我認為冬眠會更好。

00:08:55.519 --> 00:09:01.663
我還使用了 memcached (memdisk) 作為快取。

00:09:02.175 --> 00:09:03.967
它可以使虛擬記憶體使用一些實際的記憶體

00:09:04.223 --> 00:09:10.367
我相信使用虛擬記憶體在遊戲、瀏覽器、MUA等應用是強制性的

00:09:10.623 --> 00:09:12.671
因為這些應用有大量的寫入，

00:09:14.207 --> 00:09:17.023
還有這些寫入的動作需要速度。

00:09:20.607 --> 00:09:23.679
所以我估計虛擬記憶體是強制性因素。

00:09:26.239 --> 00:09:27.263
這是使用 microSD 時的困難點。

00:09:29.311 --> 00:09:34.431
好的，讓我們開始深入探討這個問題。

00:09:34.687 --> 00:09:36.735
將介紹 UEFI 和 SD 卡應對方法，希望你看得開心。

00:09:43.391 --> 00:09:45.171
這些是 UEFI 的限制，並且...

00:09:45.183 --> 00:09:48.511
可能會令人驚訝，我們可以看到許多“鎖定”功能。

00:09:48.767 --> 00:09:52.871
“解鎖”小工具相當少見，占主導地位的例外情況是遊戲筆記本電腦。

00:09:58.239 --> 00:10:00.719
因為遊戲筆記本電腦需要最佳化，所以這些被稱為“解鎖”。

00:10:07.711 --> 00:10:12.319
返回“鎖定”情況，我們無法更改 VT-d 啟用和 CPU 頻率。

00:10:12.575 --> 00:10:16.311
有時 VT-d 不會顯示，還會被禁用。

00:10:24.095 --> 00:10:26.131
特別是，禁用 VT-d 對於虛擬化至關重要。

00:10:26.143 --> 00:10:28.191
所以我向供應商詢問了這些“鎖定”。

00:10:28.447 --> 00:10:29.971
供應商說：“這是為了安全”。

00:10:30.527 --> 00:10:36.159
“為防止事故發生，應“鎖定”和“不顯示”。

00:10:39.711 --> 00:10:43.295
在這些情況下，我試圖要求用於獲取特殊的“解鎖” UEFI 圖像。

00:10:43.551 --> 00:10:45.343
結果取決於供應商，一些供應商就有提供。

00:10:45.855 --> 00:10:47.903
另外，在很多情況下，日本供應商不會提供客製化圖像。

00:10:49.183 --> 00:10:53.791
而且中國供應商是可以協商的，雖然這只是個人的主觀想法‘。

00:10:57.119 --> 00:11:01.215
好的，我想談談 SD 卡技巧。

00:11:03.263 --> 00:11:05.671
你可能有安裝經驗，

00:11:07.227 --> 00:11:09.863
如果是這樣，安裝 SD 卡並不困難。

00:11:14.015 --> 00:11:19.647
困難的地方在於，我們應該考慮SD卡本身。

00:11:19.903 --> 00:11:21.739
例如，“哪間供應商會更好”

00:11:21.951 --> 00:11:27.327
寫入周期限制是每個供應商面臨到的問題。

00:11:29.631 --> 00:11:33.983
而且您可能知道，在許多情況下，我們無法“修剪”它們。

00:11:36.031 --> 00:11:39.359
結果我們沒有辦法去降低寫入周期。

00:11:44.735 --> 00:11:48.831
這意味著我們可以超越它們的寫入週期限制。

00:11:52.415 --> 00:11:55.219
我們也應該知道 SD 卡很容易導致數據損毀。

00:11:55.243 --> 00:11:58.347
偶爾，他們會不起作用

00:12:01.807 --> 00:12:05.355
所以我們需要確定它是由損壞的媒體引起的，還是只是數據損壞而已。

00:12:11.871 --> 00:12:15.651
而且我們應該決定哪個更好，更換 SD 卡，使用 fsck 指令。

00:12:21.343 --> 00:12:27.487
如果我們能做到，將 Windows 安裝到 SD 卡是最理想的，

00:12:27.743 --> 00:12:30.303
但是 Windows 應該安裝到內部的 PCIe 儲存空間

00:12:33.887 --> 00:12:37.983
由於開機相關的限制。

00:12:38.239 --> 00:12:41.131
所以我們無法將 Windows 安裝到 SD 卡。

00:12:42.847 --> 00:12:46.175
無論如何，SD卡沒有“修剪”

00:12:50.015 --> 00:12:53.343
所以我們應該考慮如何減少寫入的動作。

00:12:53.599 --> 00:12:56.927
我們還應該檢查數據是否有損壞。

00:13:02.815 --> 00:13:06.143
讓我們考慮如何管理當 SD 卡變成無功能狀態時。

00:13:06.911 --> 00:13:11.007
根據我的經驗，它會“變成只讀取”

00:13:11.519 --> 00:13:13.823
所以第一種方法是使用“touch”指令。

00:13:16.127 --> 00:13:18.943
“touch”可以檢測

00:13:19.455 --> 00:13:21.503
當您遇到“只讀取”問題時，

00:13:23.295 --> 00:13:27.391
刪除和替換為時尚早，下一步是......

00:13:27.647 --> 00:13:30.207
從 Live USB 開機，並使用 GParted 並執行 Chkdisk

00:13:34.559 --> 00:13:39.679
Chkdisk 可以復原這種問題

00:13:40.447 --> 00:13:45.683
在很多情況下，我們可以利用這種方法解決問題，因為這是特殊的手段。

00:13:47.103 --> 00:13:49.863
我試著解釋發生了什麼。這是我的猜測，一些 SD 卡有

00:13:49.919 --> 00:13:55.807
特定行為。例如 Transcend。經過一定次數的讀取後，

00:13:56.319 --> 00:13:58.867
它們將變為“只讀”，這種行為是種安全機制。

00:13:58.879 --> 00:14:02.691
Chkdsk 可以恢復它。之後，我們可以重複使用 SD 卡直到下一個限制來到。

00:14:03.487 --> 00:14:06.559
這些行為可能是“蓄意的”安全機制。

00:14:11.167 --> 00:14:15.775
為了控制這些行為，Chkdsk 是排解故障的第一步。

00:14:18.591 --> 00:14:23.967
如果我們不能用這種方法解決“只讀取”的問題，我們應該考慮下一步。

00:14:24.223 --> 00:14:28.695
下一步是，獲取新的 SD 卡，並使用“dd”指令開始完整複製。

00:14:35.743 --> 00:14:39.839
用“dd”複製很費時間，但該方法是最可靠的。

00:14:44.959 --> 00:14:51.103
此頁面有一些調整方法可以避免 SD 卡超載，

00:14:51.359 --> 00:14:55.967
創建 memdisk 工作目錄來作為 temp

00:14:56.223 --> 00:14:59.551
我還用 memdisk 創建了工作目錄，

00:15:04.415 --> 00:15:09.791
這是 Firefox 的調整，這將使用 ramdisk temp。

00:15:15.167 --> 00:15:19.007
有關已發行的 SD 卡資訊，以下是樹莓派中的著名文章。

00:15:25.151 --> 00:15:28.775
作者是 Peter Stevens，他提供樹莓派網頁託管服務"mythic beasts"

00:15:32.575 --> 00:15:35.899
他們知識淵博，了解 SD 卡的真實情況之的運作，

00:15:35.955 --> 00:15:41.799
一開始，他們嘗試使用 SD 卡來做託管服務，

00:15:42.559 --> 00:15:47.935
他們遇到了很多問題

00:15:48.447 --> 00:15:54.079
基於這些知識，我們應該了解 SD 卡是為何是脆弱的。

00:15:58.431 --> 00:16:00.523
好，接下來

00:16:03.295 --> 00:16:06.879
有關防毒軟體

00:16:07.135 --> 00:16:10.207
我測試了 Dr.Web 和 ESET

00:16:10.671 --> 00:16:16.815
即使我使用SSD，Dr.Web 在掃描電腦時仍然佔用 CPU 100% 的資源，

00:16:21.983 --> 00:16:26.811
GPD Pocket 沒有效能足夠的 CPU，所以我們應該考慮一下。

00:16:28.383 --> 00:16:34.527
為了避免這種問題，以閒置的時間做排程，

00:16:35.295 --> 00:16:37.487
我認為排程是可以管理的，但有些難實行。

00:16:37.599 --> 00:16:41.439
ESET 則不消耗 CPU 功率。

00:16:41.695 --> 00:16:45.535
每個防毒軟體，有的耗費電腦資源。

00:16:45.791 --> 00:16:47.839
所以我們通過測試來選擇防毒軟體

00:16:48.607 --> 00:16:51.423
為了檢測，我發現一些關鍵症狀

00:16:51.935 --> 00:16:56.543
自動更新時，我不能使用 apt，因為 Dr.Web 消耗了整個 CPU。

00:17:05.247 --> 00:17:07.295
我覺得它在我的使用過情景中是不適用的。

00:17:14.207 --> 00:17:16.511
接下來是 Grub 設置，

00:17:17.023 --> 00:17:23.167
在真實的桌面案例中，我們應該在 Windows 上使用雙系統啟動，

00:17:28.287 --> 00:17:34.431
如果我們清除 Windows 並且將 ubuntu 直接安裝到內部 SSD，

00:17:34.687 --> 00:17:37.379
它可能會導致問題。

00:17:39.551 --> 00:17:45.695
就我而言，我無法啟動系統本身，沒有開機畫面也沒有信號。

00:17:45.951 --> 00:17:50.303
為了解決這個問題，問 Ubuntu 和瀏覽其他文章可能對你有幫助。

00:18:01.567 --> 00:18:05.663
對於 Linux 和 Linux 雙系統啟動，這意味著你在 SD 卡中使用了 Linux，

00:18:05.919 --> 00:18:09.435
而且還計劃安裝另一個 Linux 在內部儲存裝置中。

00:18:11.807 --> 00:18:14.143
對於這種情況，你可能會遇到另一個問題。

00:18:16.415 --> 00:18:21.095
如果更新 kernel 相關的程式，它將會重新創建 Grub 環境。

00:18:22.303 --> 00:18:27.423
而且它會影響其他部分的 Linux

00:18:27.679 --> 00:18:33.823
因此，某一端需要另一端來啟動。

00:18:34.079 --> 00:18:40.223
為了修復，你可能需要 grub-install 或開機修復工具。

00:18:46.879 --> 00:18:49.183
在我的情況下，SD 卡需要重新創建 grub，

00:18:49.439 --> 00:18:55.583
而且 Grub 需要 SD 卡，所以如果我失去 SD 卡，

00:18:55.839 --> 00:18:58.175
我的 GPD Pocket 將無法啟動。

00:19:03.263 --> 00:19:09.151
為了修復它，Grub 菜單有一個方法，就是選擇內部的 SSD，

00:19:09.919 --> 00:19:14.527
開機後，我重新創建來自內部 SSD 的 Grub，問題就解決了。

00:19:15.551 --> 00:19:21.695
因此，為了避免開機出現問題，我們應該注意 Grub 相關的東西。

00:19:23.743 --> 00:19:30.331
這裡是相關文章，當我遇到問題時都會來查看，試圖自行解決問題。

00:19:32.095 --> 00:19:34.475
樹莓派是有用的，還是沒用的呢？

00:19:41.407 --> 00:19:46.799
這是 Ubuntu 的官方頁面，我們有很多樹莓派映像檔。

00:19:48.063 --> 00:19:54.207
我們有 32 位和 64 位的 ubuntu 21.04 映像檔

00:19:55.743 --> 00:20:00.783
這是官方的。而且，這些映像檔有經樹莓派基金會的工程師評估過

00:20:01.067 --> 00:20:03.203
這代表這些映像檔是可靠的。

00:20:06.239 --> 00:20:10.079
當然，這些映像檔在樹莓派中運作良好

00:20:13.407 --> 00:20:16.611
還可以於 64 位中，以假名(平假名、片假名等)的方式輸入文字

00:20:16.635 --> 00:20:18.459
這相當有用

00:20:18.783 --> 00:20:22.367
接下來，我想解說樹莓派的現有的款式，

00:20:22.623 --> 00:20:25.439
以及該款樹莓派的 ubuntu 的使用狀況

00:20:26.975 --> 00:20:30.503
樹莓派3是主流產品，當然能使用 Ubuntu。

00:20:31.627 --> 00:20:38.619
樹莓派 4 呢，我假設許多人想要在上面使用 Ubuntu 的 Container

00:20:39.263 --> 00:20:45.407
但是，樹莓派 4 記憶體為 8GB 的型號缺貨，要到今年十一月才會開始供貨。

00:20:47.455 --> 00:20:51.259
所以請先使用 4GB 的款式或其他的型號。

00:20:56.159 --> 00:20:59.999
而且，我想要用的是樹莓派 Compute Module 的系列產品，希望很多人能來挑戰使用它。

00:21:00.511 --> 00:21:05.459
Compute Module 可以通過 PCI Express 連接許多設備。

00:21:05.823 --> 00:21:11.967
還有 HDMI 的接口，可以將其連到大型螢幕上。

00:21:13.823 --> 00:21:16.895
因此，讓我們樂在其中並實現您的好主意。

00:21:17.151 --> 00:21:21.271
一些使用者正在嘗試創建“手持”PC。

00:21:21.339 --> 00:21:24.339
讓我們來嘗試看看

00:21:29.208 --> 00:21:33.208
我很抱歉 Compute Module 沒有 USB 3.0。

00:21:34.116 --> 00:21:37.988
而且，我們的社團成員 Akkie 測試了許多設備

00:21:38.144 --> 00:21:42.496
與 PCIe 的連接性能。

00:21:43.520 --> 00:21:47.104
值得注意的一點是，10GbE 和 NVMe 都運行良好。

00:21:47.752 --> 00:21:52.660
Compute Module 最重要的一點是，

00:21:54.016 --> 00:21:58.368
支持 RTC 功能。

00:21:58.880 --> 00:22:04.256
所以我們可以以嵌入式系統和筆記本電腦來構建它，

00:22:04.512 --> 00:22:08.104
並將其用作桌面。

00:22:12.192 --> 00:22:14.240
順帶一提，接下來將提到樹莓派400

00:22:14.752 --> 00:22:20.132
它具有更快的 CPU 和精心設計的散熱器。

00:22:21.408 --> 00:22:25.760
並且也是無風扇設計。

00:22:26.016 --> 00:22:32.160
它的靈感來自複古 PC、Commodore 64 和 BBC Micro

00:22:32.416 --> 00:22:35.920
是為了教育用途設計的。

00:22:37.536 --> 00:22:42.452
第二代的版本有在地化，可以適用於日本和印度。

00:22:43.936 --> 00:22:49.132
將支持其他國家/地區的在地化版本，但不支持 ETA。

00:22:49.388 --> 00:22:53.388
所以請查看樹莓派的官方頁面。

00:22:53.412 --> 00:22:56.812
官方推特將會提供相關訊息。

00:22:58.528 --> 00:23:01.308
好的，接下來是樹莓派的產品路線，

00:23:01.600 --> 00:23:07.744
創始人 Eben 在 Tom's Hardware 中洩露了一些未來的產品路線。

00:23:08.256 --> 00:23:10.048
對此，不幸的

00:23:11.072 --> 00:23:15.072
我們遇到了半導體短缺，

00:23:15.072 --> 00:23:19.072
現在不能規劃 4a 和 5 的系列產品。

00:23:22.616 --> 00:23:27.816
所以沒有人可以得到新產品，直到半導體短缺結束為止。

00:23:30.016 --> 00:23:33.600
如果你等不及了，我可以指出你需要去搜尋什麼。

00:23:33.856 --> 00:23:37.440
先回歸到樹莓派的產品哲學，也就是向下兼容，

00:23:37.696 --> 00:23:42.560
對於孩子們來說，能讓他們玩得開心，這些都是好的提示。

00:23:43.072 --> 00:23:49.316
還有一些採訪和 Github 的專案會洩露相關訊息 :)

00:23:49.472 --> 00:23:53.964
請查看這些地方以獲取最新產品的消息

00:23:55.360 --> 00:23:58.176
最後，這不是“另一件事”。

00:23:58.432 --> 00:24:02.016
我在許多場合說過，

00:24:02.272 --> 00:24:07.392
我們正在調整樹莓派

00:24:07.904 --> 00:24:09.184
什麼是適合需求的，

00:24:09.696 --> 00:24:14.048
我們有 MagPi，官方樹莓派雜誌，

00:24:14.560 --> 00:24:18.936
我們想以您的專案來作為 MagPi 的文章發表。

00:24:19.492 --> 00:24:22.072
世界上有很多候選人，

00:24:22.496 --> 00:24:26.080
當然，MagPi 是英國的雜誌

00:24:26.336 --> 00:24:30.336
因此占主導地位的是歐洲和非洲。

00:24:30.360 --> 00:24:32.360
現在，中國和印度的使用者有增加的趨勢

00:24:32.736 --> 00:24:36.576
但是，它在全球範圍內仍是有限的。

00:24:37.088 --> 00:24:38.256
因此，

00:24:38.368 --> 00:24:52.368
我們需要更多其他地方的投稿，比如韓國、台灣、香港、澳門、越南等地。

00:24:52.448 --> 00:24:58.448
我們希望能認識和介紹來自不同領域的良好專案。

00:25:02.432 --> 00:25:07.552
因此，我們感謝您嘗試提交專案文章或聯繫我們。

00:25:09.088 --> 00:25:10.112
例如，

00:25:10.624 --> 00:25:13.624
這是一個案例

00:25:14.464 --> 00:25:16.000
該文來自台灣，

00:25:16.512 --> 00:25:18.048
製作人是Penk Chen，

00:25:18.304 --> 00:25:22.304
他提供了"CutiePie".

00:25:22.400 --> 00:25:29.400
他為 Qt 工作，這款掌上電腦擁有豐富的UI。

00:25:34.176 --> 00:25:39.040
接著，他碰到了 MagPi 的編輯

00:25:39.296 --> 00:25:41.856
而且他有意願會見 Penk Chen，

00:25:42.112 --> 00:25:47.612
所以我安排編輯和Penk Chen的會面，結果在這。

00:25:51.328 --> 00:25:54.912
我接著介紹日本的專案，

00:25:55.424 --> 00:26:00.544
這是 Kikushima 先生的案例，是在 VInyard Kikushima 的葡萄酒釀造廠執行的。

00:26:01.056 --> 00:26:04.556
在這個酒廠，他使用樹莓派

00:26:04.652 --> 00:26:06.952
並從感測器中獲取許多數據。

00:26:07.044 --> 00:26:14.044
來自動化更改農藥噴灑的量

00:26:18.464 --> 00:26:20.000
這個案例需要的是什麼？

00:26:21.024 --> 00:26:25.120
太多的農藥會破壞葡萄酒的風味。

00:26:25.376 --> 00:26:28.192
所以他想降低農藥使用量。

00:26:29.728 --> 00:26:32.328
然而，零農藥噴灑是不實際的，

00:26:32.364 --> 00:26:37.788
挑戰是，通過傳感器獲得農藥噴灑“下限”。

00:26:39.200 --> 00:26:42.180
好的，最後是我想做的事。

00:26:42.272 --> 00:26:45.856
我的夢想是引進全亞洲的專案，

00:26:46.112 --> 00:26:48.380
不限於日本

00:26:53.496 --> 00:26:55.620
我想介紹各個領域的諸多專案，

00:26:58.176 --> 00:27:00.476
我正在與許多開源社區討論，

00:27:00.485 --> 00:27:03.485
並提供各種展示。

00:27:03.596 --> 00:27:07.844
因為我相信它不應該局限於日本

00:27:08.384 --> 00:27:09.884
我一直在這樣做，

00:27:10.944 --> 00:27:17.944
中國、台灣、韓國、越南、印度尼西亞、泰國......等，

00:27:18.112 --> 00:27:24.000
我想看到來自許多領域的許多專案。

00:27:24.512 --> 00:27:26.760
所以如果你想介紹你的專案。

00:27:26.816 --> 00:27:32.424
請隨時與我聯繫。

00:27:36.032 --> 00:27:37.312
作為結論，

00:27:40.384 --> 00:27:46.056
使用 Ubuntu 桌面很有趣，就像是疊樂高。

00:27:46.272 --> 00:27:51.272
我們永遠不應該忘記，

00:27:52.416 --> 00:27:54.852
你應該付出一些時間，這永遠不簡單。

00:27:54.976 --> 00:27:58.476
如果不可行，

00:27:58.548 --> 00:28:02.388
我們應該安裝到 SD 卡並使用子系統。

00:28:02.444 --> 00:28:05.180
並以 Windows 作為主要系統。

00:28:05.216 --> 00:28:08.032
我想重申這一點。

00:28:08.160 --> 00:28:14.504
我們應該審查內部 SSD 和 microSD 的利與弊。

00:28:14.560 --> 00:28:18.728
考慮權衡是必要的。

00:28:19.552 --> 00:28:27.152
此外，我們應該了解 SD 卡如何作為開機設備來運行的。

00:28:29.792 --> 00:28:38.556
而且，對於樹莓派而言，Ubuntu 是官方且是 64 位元的。

00:28:44.384 --> 00:28:47.200
樹莓派自己的 64 位作業系統還處於試用階段。

00:28:49.760 --> 00:28:53.600
而 64 位 suse 已是正式階段。

00:28:53.856 --> 00:29:00.856
據我所知，只有 suse 和 Ubuntu 是具有 64 位支持的官方正式版本。

00:29:02.560 --> 00:29:10.560
如果你有很棒的專案，當然，請聯繫我。

00:29:11.008 --> 00:29:20.008
郵件、推特、臉書、Linkedin都可以，歡迎使用任何方法聯繫我。

00:29:21.760 --> 00:29:26.060
請讓我知道任何有聯繫我的人。

00:29:26.880 --> 00:29:29.952
感謝您的觀看。

00:29:30.720 --> 00:29:32.512
好吧，大概 30 分鐘。

00:29:33.024 --> 00:29:38.024
祝你有美好的一天，再見！

